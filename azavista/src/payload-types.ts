/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    navbar: Navbar;
    hero: Hero;
    smarterEvents: SmarterEvent;
    'event-features': EventFeature;
    'custom-feature': CustomFeature;
    'why-azavista': WhyAzavista;
    caseStudiesBlock: CaseStudiesBlock;
    testimonialsBlock: TestimonialsBlock;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    navbar: NavbarSelect<false> | NavbarSelect<true>;
    hero: HeroSelect<false> | HeroSelect<true>;
    smarterEvents: SmarterEventsSelect<false> | SmarterEventsSelect<true>;
    'event-features': EventFeaturesSelect<false> | EventFeaturesSelect<true>;
    'custom-feature': CustomFeatureSelect<false> | CustomFeatureSelect<true>;
    'why-azavista': WhyAzavistaSelect<false> | WhyAzavistaSelect<true>;
    caseStudiesBlock: CaseStudiesBlockSelect<false> | CaseStudiesBlockSelect<true>;
    testimonialsBlock: TestimonialsBlockSelect<false> | TestimonialsBlockSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  /**
   * Cloudinary public ID
   */
  cloudinaryId?: string | null;
  /**
   * Cloudinary Media Information
   */
  cloudinary?: {
    /**
     * Cloudinary Public ID (used for transformations)
     */
    public_id?: string | null;
    /**
     * Type of the resource (image, video, raw)
     */
    resource_type?: string | null;
    /**
     * File format
     */
    format?: string | null;
    /**
     * Secure delivery URL
     */
    secure_url?: string | null;
    /**
     * File size in bytes
     */
    bytes?: number | null;
    /**
     * Creation timestamp
     */
    created_at?: string | null;
    /**
     * Current version number
     */
    version?: string | null;
    /**
     * Unique version identifier
     */
    version_id?: string | null;
    /**
     * Width in pixels
     */
    width?: number | null;
    /**
     * Height in pixels
     */
    height?: number | null;
    /**
     * Duration in seconds (for videos)
     */
    duration?: number | null;
    /**
     * Number of pages (for PDFs)
     */
    pages?: number | null;
    /**
     * Which page of the PDF to use for thumbnails (changes will apply after saving)
     */
    selected_page?: number | null;
    /**
     * URL for the thumbnail image (automatically generated for PDFs)
     */
    thumbnail_url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  /**
   * Cloudinary URL will be populated automatically
   */
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navbar".
 */
export interface Navbar {
  id: number;
  label: string;
  logo: number | Media;
  links?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  ctaLabel?: string | null;
  ctaUrl?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hero".
 */
export interface Hero {
  id: number;
  heading: string;
  subheading?: string | null;
  buttons?:
    | {
        label: string;
        url: string;
        variant?: ('primary' | 'secondary') | null;
        id?: string | null;
      }[]
    | null;
  logos?:
    | {
        logo: number | Media;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "smarterEvents".
 */
export interface SmarterEvent {
  id: number;
  heading: string;
  image: number | Media;
  categoryLabel: string;
  title: string;
  description: string;
  primaryButtonLabel?: string | null;
  primaryButtonUrl?: string | null;
  secondaryButtonLabel?: string | null;
  secondaryButtonUrl?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "event-features".
 */
export interface EventFeature {
  id: number;
  tabs: {
    tabLabel: string;
    heading: string;
    description: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    image: number | Media;
    id?: string | null;
  }[];
  buttonLabel?: string | null;
  buttonUrl?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "custom-feature".
 */
export interface CustomFeature {
  id: number;
  subheading: string;
  heading: string;
  buttonLabel: string;
  buttonUrl: string;
  image: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "why-azavista".
 */
export interface WhyAzavista {
  id: number;
  badge: string;
  title: string;
  subtitle: string;
  features?:
    | {
        icon: number | Media;
        headingBlue: string;
        headingBlack: string;
        description: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "caseStudiesBlock".
 */
export interface CaseStudiesBlock {
  id: number;
  badge: string;
  title: string;
  subtitle?: string | null;
  cards?:
    | {
        category?: string | null;
        title?: string | null;
        description?: string | null;
        image?: (number | null) | Media;
        link?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonialsBlock".
 */
export interface TestimonialsBlock {
  id: number;
  badge?: string | null;
  title: string;
  subtitle?: string | null;
  items?:
    | {
        quote: string;
        author: string;
        role?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'navbar';
        value: number | Navbar;
      } | null)
    | ({
        relationTo: 'hero';
        value: number | Hero;
      } | null)
    | ({
        relationTo: 'smarterEvents';
        value: number | SmarterEvent;
      } | null)
    | ({
        relationTo: 'event-features';
        value: number | EventFeature;
      } | null)
    | ({
        relationTo: 'custom-feature';
        value: number | CustomFeature;
      } | null)
    | ({
        relationTo: 'why-azavista';
        value: number | WhyAzavista;
      } | null)
    | ({
        relationTo: 'caseStudiesBlock';
        value: number | CaseStudiesBlock;
      } | null)
    | ({
        relationTo: 'testimonialsBlock';
        value: number | TestimonialsBlock;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  cloudinaryId?: T;
  cloudinary?:
    | T
    | {
        public_id?: T;
        resource_type?: T;
        format?: T;
        secure_url?: T;
        bytes?: T;
        created_at?: T;
        version?: T;
        version_id?: T;
        width?: T;
        height?: T;
        duration?: T;
        pages?: T;
        selected_page?: T;
        thumbnail_url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navbar_select".
 */
export interface NavbarSelect<T extends boolean = true> {
  label?: T;
  logo?: T;
  links?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  ctaLabel?: T;
  ctaUrl?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hero_select".
 */
export interface HeroSelect<T extends boolean = true> {
  heading?: T;
  subheading?: T;
  buttons?:
    | T
    | {
        label?: T;
        url?: T;
        variant?: T;
        id?: T;
      };
  logos?:
    | T
    | {
        logo?: T;
        alt?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "smarterEvents_select".
 */
export interface SmarterEventsSelect<T extends boolean = true> {
  heading?: T;
  image?: T;
  categoryLabel?: T;
  title?: T;
  description?: T;
  primaryButtonLabel?: T;
  primaryButtonUrl?: T;
  secondaryButtonLabel?: T;
  secondaryButtonUrl?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "event-features_select".
 */
export interface EventFeaturesSelect<T extends boolean = true> {
  tabs?:
    | T
    | {
        tabLabel?: T;
        heading?: T;
        description?: T;
        image?: T;
        id?: T;
      };
  buttonLabel?: T;
  buttonUrl?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "custom-feature_select".
 */
export interface CustomFeatureSelect<T extends boolean = true> {
  subheading?: T;
  heading?: T;
  buttonLabel?: T;
  buttonUrl?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "why-azavista_select".
 */
export interface WhyAzavistaSelect<T extends boolean = true> {
  badge?: T;
  title?: T;
  subtitle?: T;
  features?:
    | T
    | {
        icon?: T;
        headingBlue?: T;
        headingBlack?: T;
        description?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "caseStudiesBlock_select".
 */
export interface CaseStudiesBlockSelect<T extends boolean = true> {
  badge?: T;
  title?: T;
  subtitle?: T;
  cards?:
    | T
    | {
        category?: T;
        title?: T;
        description?: T;
        image?: T;
        link?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonialsBlock_select".
 */
export interface TestimonialsBlockSelect<T extends boolean = true> {
  badge?: T;
  title?: T;
  subtitle?: T;
  items?:
    | T
    | {
        quote?: T;
        author?: T;
        role?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}